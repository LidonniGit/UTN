package reporteincidente.Vistas;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import reporteincidente.Entidades.Cliente;
import reporteincidente.Entidades.Servicio;
import reporteinicidente.Repositorio.ClienteJpaController;
import reporteinicidente.Repositorio.ServicioJpaController;
import reporteinicidente.Repositorio.exceptions.NonexistentEntityException;

public class ABMClienteFrame extends javax.swing.JInternalFrame {

    private boolean clienteEncontrado = false;
    private int idServicio=-1;

    private DefaultListModel<String> modelo = new DefaultListModel<>();

    private final DefaultTableModel tabla = new DefaultTableModel() { //Creo un objeto DefaulTableModel para darle un modelo a la tabla
        @Override
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    /**
     * Creates new form ABMClienteFrame
     */
    public ABMClienteFrame() {
        initComponents();
        armarCabecerata(); //Armo cabecera de la tabla
        limpiar();
        cargarServicios();
    }

    //Metodo para darle un tamaño a la columna
    private void setTamañoColumna(int columna, int tamaño) {
        TableColumn column = jTablaServicios.getColumnModel().getColumn(columna);
        column.setPreferredWidth(tamaño);
    }

    // Método para centrar los encabezados de las columnas
    private void centrarEncabezado(JTable table) {
        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) table.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnEliminar = new javax.swing.JButton();
        jBtnNuevo = new javax.swing.JButton();
        jBtnGuardar = new javax.swing.JButton();
        jBtnModificar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jBtnSalir = new javax.swing.JButton();
        jTextCodigo = new javax.swing.JTextField();
        jTextCUIT = new javax.swing.JTextField();
        jTextRazonSocial = new javax.swing.JTextField();
        jTextEmail = new javax.swing.JTextField();
        jbtnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaServicios = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jBtnServiciosMas = new javax.swing.JButton();
        jBtnServiciosMenos = new javax.swing.JButton();
        jCboxServicios = new javax.swing.JComboBox<>();

        setTitle("Clientes");

        jBtnEliminar.setText("Eliminar");
        jBtnEliminar.setEnabled(false);
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });

        jBtnNuevo.setText("Nuevo");
        jBtnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnNuevoActionPerformed(evt);
            }
        });

        jBtnGuardar.setText("Guardar");
        jBtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGuardarActionPerformed(evt);
            }
        });

        jBtnModificar.setText("Modificar");
        jBtnModificar.setEnabled(false);
        jBtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModificarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Email");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Razon Social");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Codigo");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("CUIT");

        jBtnSalir.setText("Salir");
        jBtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalirActionPerformed(evt);
            }
        });

        jTextCodigo.setEditable(false);

        jbtnBuscar.setText("Buscar");
        jbtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBuscarActionPerformed(evt);
            }
        });

        jTablaServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablaServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaServiciosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTablaServiciosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTablaServicios);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Servicios Contratados");

        jBtnServiciosMas.setText("+ Servicios");
        jBtnServiciosMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnServiciosMasActionPerformed(evt);
            }
        });

        jBtnServiciosMenos.setText("- Servicios");
        jBtnServiciosMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnServiciosMenosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextCUIT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jbtnBuscar)))
                .addGap(212, 212, 212))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jBtnNuevo)
                        .addGap(30, 30, 30)
                        .addComponent(jBtnGuardar)
                        .addGap(30, 30, 30)
                        .addComponent(jBtnEliminar)
                        .addGap(30, 30, 30)
                        .addComponent(jBtnModificar)
                        .addGap(100, 100, 100)
                        .addComponent(jBtnSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jCboxServicios, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBtnServiciosMas)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnServiciosMenos)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextCUIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnBuscar))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jCboxServicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnServiciosMas)
                    .addComponent(jBtnServiciosMenos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnEliminar)
                    .addComponent(jBtnModificar)
                    .addComponent(jBtnGuardar)
                    .addComponent(jBtnNuevo)
                    .addComponent(jBtnSalir))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtnSalirActionPerformed

    private void jBtnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnNuevoActionPerformed
        limpiar();
    }//GEN-LAST:event_jBtnNuevoActionPerformed

    private void jbtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBuscarActionPerformed
        Long codigo;
        ClienteJpaController controlCliente = new ClienteJpaController();
      //  ServicioJpaController controlServicio = new ServicioJpaController();
        try { //Bloque TRY-CATCH para verificar si el codigo es valido.
            codigo = Long.valueOf(jTextCUIT.getText());
            if (codigo != 0) {
                List<Cliente> clienteAux = new ArrayList();
                List<Servicio> servList = new ArrayList();
                clienteAux = controlCliente.buscarPorCuit(codigo);
                if (!clienteAux.isEmpty()) {
                    jTextCodigo.setText(clienteAux.get(0).getId() + "");
                    jTextCUIT.setText(clienteAux.get(0).getCuit() + "");
                    jTextEmail.setText(clienteAux.get(0).getEmail());
                    jTextRazonSocial.setText(clienteAux.get(0).getRazonSocial());
                    jBtnEliminar.setEnabled(true);
                    jBtnModificar.setEnabled(true);
                    jBtnGuardar.setEnabled(false);
                    clienteEncontrado = true;
                    servList = clienteAux.get(0).getServicios();
                    cargoTabla(servList);
                    jBtnServiciosMas.setVisible(true);
                }else {
                    JOptionPane.showMessageDialog(this, "CUIT no valido");
                    limpiar();
                }
                
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Ingrese un cuit válido.", "INFORMACIÓN", 1);
        }
    }//GEN-LAST:event_jbtnBuscarActionPerformed

    //CARGO LA INFO EN LA TABLA
    public void cargoTabla(List<Servicio> servlist) {

        for (Servicio cuartel : servlist) {
            tabla.addRow(new Object[]{cuartel.getId(), cuartel.getTipo(), cuartel.getDescripcion()});
            // modelo.addElement(cuartel.getId()+" "+ cuartel.getTipo()+" "+ cuartel.getDescripcion());
        }
    }

    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed

        int respuesta;
        if (clienteEncontrado) {
            respuesta = JOptionPane.showConfirmDialog(
                    null,
                    "¿Deseas borrar al cliene", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
            if (respuesta == JOptionPane.YES_OPTION) {
                try {
                    ClienteJpaController controlCliente = new ClienteJpaController();
                    controlCliente.destroy(Integer.parseInt(jTextCodigo.getText()));
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(ABMClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            limpiar();
        } else {
            JOptionPane.showMessageDialog(this, "No hay cliente seleccionado");
        }
    }//GEN-LAST:event_jBtnEliminarActionPerformed

    //BOTON SERVICIOS
    private void jBtnServiciosMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnServiciosMasActionPerformed
             
         DefaultComboBoxModel<Servicio> model = (DefaultComboBoxModel<Servicio>) jCboxServicios.getModel();
         Servicio servT = (Servicio) jCboxServicios.getSelectedItem();
        tabla.addRow(new Object[]{servT.getId(), servT.getTipo(), servT.getDescripcion()});
    }//GEN-LAST:event_jBtnServiciosMasActionPerformed

    private void jBtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGuardarActionPerformed

        ClienteJpaController controlCliente = new ClienteJpaController();
        Cliente clienteNumero = new Cliente();
        if ((!jTextCUIT.getText().isEmpty()) && (!jTextRazonSocial.getText().isEmpty())) {
            clienteNumero.setCuit(Long.parseLong(jTextCUIT.getText()));
            clienteNumero.setEmail(jTextEmail.getText());
            clienteNumero.setRazonSocial(jTextRazonSocial.getText());
            clienteNumero.setEstado(true);
            List<Servicio> listaServ = new ArrayList();

                      
            for (int fila = 0; fila <= jTablaServicios.getRowCount() - 1 ; fila++) {
                Servicio serv = new Servicio();
                serv.setId((Integer) jTablaServicios.getValueAt(fila, 0));
                serv.setTipo((String) jTablaServicios.getValueAt(fila, 1));
                serv.setDescripcion((String) jTablaServicios.getValueAt(fila, 2));
                serv.setCliente(clienteNumero);
                listaServ.add(serv);
            }
            clienteNumero.setServicios(listaServ);
            controlCliente.create(clienteNumero);
            limpiar();
        }

    }//GEN-LAST:event_jBtnGuardarActionPerformed

    private void jBtnServiciosMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnServiciosMenosActionPerformed
      
        if ((idServicio!=-1)&& (jTablaServicios.getRowCount()>0)){
            tabla.removeRow(idServicio-1);
        }
        
    }//GEN-LAST:event_jBtnServiciosMenosActionPerformed

    private void jBtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModificarActionPerformed
        ClienteJpaController controlCliente = new ClienteJpaController();
        Cliente clienteNumero = new Cliente();
        if ((!jTextCUIT.getText().isEmpty()) && (!jTextRazonSocial.getText().isEmpty())) {
            try {
                clienteNumero.setCuit(Long.parseLong(jTextCUIT.getText()));
                clienteNumero.setEmail(jTextEmail.getText());
                clienteNumero.setRazonSocial(jTextRazonSocial.getText());
                clienteNumero.setEstado(true);
                List<Servicio> listaServ = new ArrayList();

               for (int fila = 0; fila <= jTablaServicios.getRowCount() - 1 ; fila++) {
                    Servicio serv = new Servicio();
                    serv.setId((Integer) jTablaServicios.getValueAt(fila, 0));
                    serv.setTipo((String) jTablaServicios.getValueAt(fila, 1));
                    serv.setDescripcion((String) jTablaServicios.getValueAt(fila, 2));
                    serv.setCliente(clienteNumero);
                    listaServ.add(serv);
                }
                clienteNumero.setServicios(listaServ);
                clienteNumero.setId(Integer.parseInt(jTextCodigo.getText()));
                controlCliente.edit(clienteNumero);
                limpiar();
            } catch (Exception ex) {
                Logger.getLogger(ABMClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jBtnModificarActionPerformed

    private void jTablaServiciosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaServiciosMousePressed
        int filaSeleccionada = -1;
        filaSeleccionada = jTablaServicios.getSelectedRow();
        if (filaSeleccionada != -1) { //Se selecciono una fila
            idServicio = (Integer) jTablaServicios.getValueAt(filaSeleccionada, 0);
        }
    }//GEN-LAST:event_jTablaServiciosMousePressed

    private void jTablaServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaServiciosMouseClicked
      int filaSeleccionada = -1;
        filaSeleccionada = jTablaServicios.getSelectedRow();
        if (filaSeleccionada != -1) { //Se selecciono una fila
            idServicio = (Integer) jTablaServicios.getValueAt(filaSeleccionada, 0);
        }
    }//GEN-LAST:event_jTablaServiciosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnGuardar;
    private javax.swing.JButton jBtnModificar;
    private javax.swing.JButton jBtnNuevo;
    private javax.swing.JButton jBtnSalir;
    private javax.swing.JButton jBtnServiciosMas;
    private javax.swing.JButton jBtnServiciosMenos;
    private javax.swing.JComboBox<Servicio> jCboxServicios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaServicios;
    private javax.swing.JTextField jTextCUIT;
    private javax.swing.JTextField jTextCodigo;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextRazonSocial;
    private javax.swing.JButton jbtnBuscar;
    // End of variables declaration//GEN-END:variables

    private void limpiar() {

        jTextCodigo.setText("");
        jTextCUIT.setText("");
        jTextEmail.setText("");
        jTextRazonSocial.setText("");
        jBtnEliminar.setEnabled(false);
        jBtnModificar.setEnabled(false);
        jBtnGuardar.setEnabled(true);
        clienteEncontrado = false;
        borrarFilas();
      
    }

    private void armarCabecerata() {
        tabla.addColumn("ID"); //Creo columna
        tabla.addColumn("Descripcion"); //Creo columna
        tabla.addColumn("Tipo"); //Creo columna
        jTablaServicios.setModel(tabla); //CARGO LAS COLUMNAS A LA TABLA
        centrarEncabezado(jTablaServicios); //Centro los encabezados
        TableColumnModel columnModel = jTablaServicios.getColumnModel();//Determino el ancho de cada columna
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(170);
    }

    //LIMPIO LAS FILAS
    private void borrarFilas() {

        int filas = jTablaServicios.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            tabla.removeRow(f);

        }
    }

    private void cargarServicios() {
       
        ServicioJpaController controlServ=new ServicioJpaController();
        List<Servicio> serv=new ArrayList<>();
        serv=controlServ.findServicioEntities();
        for (Servicio unServ : serv) {
            jCboxServicios.addItem(unServ);
      
        }
    }

}
